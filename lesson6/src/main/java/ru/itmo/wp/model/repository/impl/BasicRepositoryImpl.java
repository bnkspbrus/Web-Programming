package ru.itmo.wp.model.repository.impl;

import ru.itmo.wp.model.database.DatabaseUtils;
import ru.itmo.wp.model.domain.BaseElement;
import ru.itmo.wp.model.exception.RepositoryException;

import javax.sql.DataSource;
import java.sql.*;

public abstract class BasicRepositoryImpl<T extends BaseElement> {
    private final DataSource DATA_SOURCE = DatabaseUtils.getDataSource();

    public T find(long id, String tableName) {
        try (Connection connection = DATA_SOURCE.getConnection()) {
            try (PreparedStatement statement = connection.prepareStatement("SELECT * FROM " + tableName + " WHERE id=?")) {
                statement.setLong(1, id);
                try (ResultSet resultSet = statement.executeQuery()) {
                    return toElement(statement.getMetaData(), resultSet);
                }
            }
        } catch (SQLException e) {
            throw new RepositoryException("Can't find " + tableName + ".", e);
        }
    }

    protected abstract T toElement(ResultSetMetaData metaData, ResultSet resultSet) throws SQLException;

    public void save(T element, String sql, int autoGeneratedKeys, String... args) {
        try (Connection connection = DATA_SOURCE.getConnection()) {
            try (PreparedStatement statement = connection.prepareStatement(sql, autoGeneratedKeys)) {
                for (int i = 0; i < args.length; i++) {
                    statement.setString(i + 1, args[i]);
                }
                if (statement.executeUpdate() != 1) {
                    throw new RepositoryException("Can't save " + element.getClass().getSimpleName() + ".");
                } else {
                    ResultSet generatedKeys = statement.getGeneratedKeys();
                    if (generatedKeys.next()) {
                        element.setId(generatedKeys.getLong(1));
                        T inTable = find(element.getId(), element.getClass().getSimpleName());
                        element.setCreationTime(inTable.getCreationTime());
                    } else {
                        throw new RepositoryException(
                                "Can't save " + element.getClass().getSimpleName() + " [no autogenerated fields].");
                    }
                }
            }
        } catch (SQLException e) {
            throw new RepositoryException("Can't save " + element.getClass().getSimpleName() + ".", e);
        }
    }
}
